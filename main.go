// Copyright 2022 Liam White
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package main

import (
	"os"

	"google.golang.org/protobuf/compiler/protogen"

	"github.com/dave/jennifer/jen"
	"github.com/rs/zerolog"

	"github.com/liamawhite/protoc-gen-terraform/pkg/generate"
)

func main() {
	if debug := os.Getenv("DEBUG"); debug != "" {
		zerolog.SetGlobalLevel(zerolog.DebugLevel)
	}
	protogen.Options{}.Run(func(gen *protogen.Plugin) error {
		for _, f := range gen.Files {
			if !f.Generate {
				continue
			}
			generateFile(gen, f)
		}
		return nil
	})
}

// generateFile generates a _ascii.pb.go file containing gRPC service definitions.
func generateFile(gen *protogen.Plugin, file *protogen.File) {
	filename := file.GeneratedFilenamePrefix + "_terraform.go"

	f := jen.NewFile(string(file.GoPackageName))
	for _, m := range file.Messages {
		generate.Scheme(f, m)
	}

	g := gen.NewGeneratedFile(filename, file.GoImportPath)
	g.P("// Code generated by protoc-gen-terraform. DO NOT EDIT.")
	g.P(f.GoString())
}
